name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-20.04'
        python-version:
          - '3.8'
        arch:
          - 'x86_64'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Install Dependencies
      run: |
                sudo apt-get update && sudo apt-get -y install python3.8 curl git
                sudo ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && sudo apt-get install -y tzdata && sudo dpkg-reconfigure --frontend noninteractive tzdata
                sudo apt-get -y install software-properties-common && sudo add-apt-repository ppa:deadsnakes/ppa && sudo apt-get -y update
                python3.8 -m pip install --upgrade pip
                python3.8 --version
                uname -m
                sudo apt-get -y install make
                sudo apt-get -y install autoconf automake build-essential cmake libtool mercurial pkg-config
                sudo apt-get -y install libgmp-dev libmpfr-dev libmpc-dev libgtest-dev libgtk-3-dev libgirepository1.0-dev
                sudo apt-get install libglib2.0-dev -y
                sudo apt-get install llvm-dev -y
                sudo apt-get install libpq-dev -y libxml2-dev -y libxslt1-dev -y python3-dev -y
                sudo apt-get -y install openssl libssl-dev libssl1.0 libgl1-mesa-dev libqt5x11extras5 qtcreator zlib1g-dev liblzma-dev libbz2-dev
                sudo apt-get -y install python-dev libcpputest-dev as31 nasm gfortran valac default-jdk openjdk-8-jdk mono-complete gobject-introspection gtk+-3.0 libboost-all-dev
                sudo apt-get install tachyon -y
                sudo apt-get install cython -y
                sudo apt-get install libatf-c++-2 -y
                sudo apt-get -y install gcc g++ dub mono-complete
                curl -fsS https://dlang.org/install.sh | bash -s dmd
                sh <(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs) -y --default-toolchain beta
                source $HOME/.cargo/env
                pip3 install jsonschema
                python3.8 setup.py install
                python3.8 -m pip install meson
                python3.8 -m pip install pytest ninja
                export MESON_UNIT_TEST_BACKEND=ninja

    - name: test      
      run: |
        ./run_tests.py

  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update && apt-get -y install python3.8 curl git && \
                ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
                apt-get -y install software-properties-common && add-apt-repository ppa:deadsnakes/ppa && apt-get -y update && \
                apt install -y python3.8-venv && python3.8 -m venv venv38 && source venv38/bin/activate && \
                python3.8 -m pip install --upgrade pip && \
                python3.8 --version && \
                uname -m && \
                apt-get -y install make && \
                apt-get -y install autoconf automake build-essential cmake libtool mercurial pkg-config && \
                apt-get -y install libgmp-dev libmpfr-dev libmpc-dev libgtest-dev libgtk-3-dev libgirepository1.0-dev && \
                apt-get install libglib2.0-dev -y && \
                apt-get install llvm-dev -y && \
                apt-get install libpq-dev -y libxml2-dev -y libxslt1-dev -y python3-dev -y && \
                apt-get -y install openssl libssl-dev libssl1.0 libgl1-mesa-dev libqt5x11extras5 qtcreator zlib1g-dev liblzma-dev libbz2-dev && \
                apt-get -y install python-dev libcpputest-dev as31 nasm gfortran valac default-jdk openjdk-8-jdk mono-complete gobject-introspection gtk+-3.0 libboost-all-dev && \
                apt-get install tachyon -y && \
                apt-get install cython -y && \
                apt-get install libatf-c++-2 -y && \
                apt-get -y install gcc g++  dmd-compiler dub mono-complete dotnet-sdk && \
                curl -fsS https://dlang.org/install.sh | bash -s dmd
                sh <(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs) -y --default-toolchain beta && \
                source $HOME/.cargo/env && \
                python3.8 setup.py install && \
                python3.8 -m pip install meson && \
                python3.8 -m pip install pytest ninja && \
                export MESON_UNIT_TEST_BACKEND=ninja && \
                ./run_unittests.py && \
                deactivate'
        
               
